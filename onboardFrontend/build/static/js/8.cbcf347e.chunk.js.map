{"version":3,"sources":["views/EmailVerification.js"],"names":["EmailVerification","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","sendVerificationLink","payload","email","state","origin","setState","loader","message","sendEmailVerification","then","res","status","statusCode","HTTP_200_OK","key","Object","keys","response","data","detail","catch","err","onEmailVerification","verify_token","token","verifyEmail","seconds","foo","setInterval","document","getElementById","innerHTML","clearInterval","window","location","replace","showSendVefificationLink","queryParams","URLSearchParams","search","get","_createClass","value","this","_this2","_jsxs","className","children","_jsx","Link","to","Logo","concat","Spinner","size","color","EmailVerify","id","CardText","onClick","href","style","fontStyle","fontWeight","ChevronLeft","Component"],"mappings":"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","file":"static/js/8.cbcf347e.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { Link, useSearchParams } from \"react-router-dom\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { statusCode } from \"../utility/constants/utilObject\"\nimport { renderLogoText, getQueryVariables, showErrorToast, showSuccessToast } from \"../utility/helper\"\nimport { sendEmailVerification, verifyEmail  } from \"../services/agent\"\nimport {\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Label,\n  Input,\n  Button,\n  Spinner\n} from \"reactstrap\"\n\nimport {ReactComponent as Logo} from \"../assets/icons/logo.svg\"\nimport {ReactComponent as EmailVerify} from \"../assets/images/pages/Email-Verify.svg\"\nimport { ChevronLeft } from \"react-feather\"\n\nclass EmailVerification extends Component {\n    constructor(props) {\n      super(props)\n      const queryParams = new URLSearchParams(window.location.search)\n      const email = queryParams.get(\"email\");\n      const token = queryParams.get(\"auth-token\");\n      this.state = {\n        email: email,\n        token: token,\n        status: false,\n        loader: true,\n        showSendVefificationLink: false\n      }\n    }\n\n    componentDidMount(){\n      this.onEmailVerification()\n    }\n\n    sendVerificationLink = () => {\n      const payload = {\n        email: this.state.email,\n        origin: ''\n      }\n      this.setState({loader: true, message: \"\"});\n      sendEmailVerification(payload).then((res)=>{\n            if (res.status == statusCode.HTTP_200_OK) {    \n              this.setState({\n                loader: false,\n                status: true,\n                message: \"We have shared a verification link to your email. Please check your inbox for the same!\"\n              });\n            } else {\n              let key = Object.keys(res.response.data);\n              key = key[0];\n              this.setState({status:false, loader: false, message: \"Sending failed: \"+res.response.data.detail});\n             \n            }\n          }).catch((err)=>{\n            this.setState({\n              loader: false,\n              status: false,\n              message: err.message\n            });\n          })\n    }\n  \n    onEmailVerification = () => {\n      const payload = {\n          email: this.state.email,\n          verify_token: this.state.token,\n        }\n      if(this.state.email && this.state.token){\n          verifyEmail(payload).then((res)=>{\n              if (res.status == statusCode.HTTP_200_OK) {\n                this.setState({status:true, loader: false, message: \"Your email verification is successful!\"});\n                let seconds = 15;\n                let foo = setInterval(function () {\n                  document.getElementById(\"seconds\").innerHTML = seconds;\n                  seconds--;\n                  if (seconds == -1) {\n                      clearInterval(foo);\n                      window.location.replace('/login');\n                  }\n                }, 1000);\n              } else {\n                this.setState({status:false, showSendVefificationLink: res.response.data.detail == \"User email verification link has expired\" ? true : false, loader: false, message: res.response.data.detail});\n              }\n            }).catch((err)=>{\n              this.setState({status:false, loader: false, message: err.message});\n          })\n      }else{\n        this.setState({status:false, loader: false, message: \"Email verification failed, please try again later\"});\n      }\n    }\n\n    render(){\n      return (\n        <div className=\"registerWrapper\">\n          <div className=\"topLeft\"></div>\n            <div className=\"verificationDetail\">\n                <Link className=\"brand-logo \" to=\"/login\">\n                  <Logo />\n                </Link>\n               <div className=\"forgetPass align-items-center\">\n              <p className={`${this.state.loader ? '': 'titleCard'}  ${this.state.status ? 'primary' : 'text-danger'}`}>\n                {\n                    this.state.loader ? <Spinner size={'12px'} color=\"primary\" /> : this.state.status ? 'Email verified successfully' : 'Email verification failed'\n                }\n              </p>\n              <div className=\"imgBox\">\n                <EmailVerify />\n              </div>\n              <p className={`textArea ${this.state.status ? 'primary' : 'text-danger'}`}>{this.state.message}</p>              \n              {\n                this.state.status === true && <p>\n                  You should be automatically redirected in <span id=\"seconds\">7</span> seconds.\n                </p>\n              }\n              {\n                this.state.showSendVefificationLink === true &&\n                <CardText className=\"mb-2\">\n                  Your verification link has expired. \n                  Click <a onClick={()=>this.sendVerificationLink()} href=\"javascript:void(0)\" style={{fontStyle: 'italic', fontWeight: 'bold'}} > here </a> to resend the verification link!\n                </CardText>\n              }\n              <Link to=\"/login\" className=\"backToHome\">\n                <ChevronLeft/>\n                <span>Back To Home Page</span>\n              </Link>\n            </div>\n            </div>\n          <div className=\"bottomRight\"></div>\n        </div>\n      )\n    \n    \n    }\n\n}\n\nexport default EmailVerification\n"],"sourceRoot":""}