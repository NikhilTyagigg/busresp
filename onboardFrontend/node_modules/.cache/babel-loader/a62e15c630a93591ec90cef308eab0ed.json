{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\component\\\\CustomInputBox\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Info } from 'react-feather';\nimport ReactTooltip from \"react-tooltip\";\nimport { Spinner } from 'reactstrap';\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInputBox = ({\n  value,\n  onChange,\n  onBlur,\n  onClick,\n  mandatory,\n  label,\n  labelButton,\n  labelButtonSpinner,\n  onLabelBtnClick,\n  charCount,\n  maxLength,\n  inputType,\n  placeholderText,\n  size,\n  note,\n  error,\n  noOfColumns,\n  smallBoxEnabled,\n  info,\n  customMargin\n}) => {\n  const _handleText = e => {\n    onChange(e.target.value);\n  };\n  const _handleGuidingText = e => {\n    onClick(e.target.value);\n  };\n  const _hideGuidingText = e => {\n    onBlur('');\n  };\n  const renderLabel = () => {\n    let infoContainer = \"\";\n    let labelContainer = \"\";\n    let labelButtonContainer = \"\";\n    if (info) {\n      infoContainer = /*#__PURE__*/_jsxDEV(Info, {\n        \"data-tip\": true,\n        \"data-for\": label,\n        className: \"actionIcon\",\n        style: {\n          marginLeft: '7px'\n        },\n        size: \"19px\",\n        color: \"#546E7A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this);\n    }\n    if (labelButton) {\n      labelButtonContainer = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onLabelBtnClick ? onLabelBtnClick : {},\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"suggestionLabelBlockButton\",\n        children: labelButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this);\n    }\n    if (labelButtonSpinner) {\n      labelButtonContainer = /*#__PURE__*/_jsxDEV(Spinner, {\n        size: '12px',\n        color: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this);\n    }\n    if (label) {\n      labelContainer = /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelTextArea\",\n        children: [label, mandatory ? \" *\" : \"\", labelButtonContainer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this);\n    }\n    return labelContainer;\n  };\n  const renderInfoToolTip = () => {\n    if (info) {\n      return /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: label,\n        backgroundColor: \"#1761fd\",\n        place: \"top\",\n        offset: {\n          left: '0%'\n        },\n        effect: \"solid\",\n        html: true,\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const renderNote = () => {\n    if (note) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipNoteStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"bold\"\n          },\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), \": \", note]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const renderCharCount = () => {\n    if (charCount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipNoteStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"bold\"\n          },\n          children: \"Character count: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), value.length, \" \", maxLength ? \" / \" + maxLength : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const smallBox = {\n    height: '20px'\n  };\n  const columnNumber = () => {\n    if (noOfColumns) {\n      return noOfColumns;\n    } else if (smallBoxEnabled) {\n      return \"10\";\n    } else {\n      return \"30\";\n    }\n  };\n  const boxStyle = () => {\n    const styleObject = {};\n    if (size) {\n      switch (size) {\n        case \"xxl\":\n          styleObject['height'] = \"320px\";\n          break;\n        case \"xll\":\n          styleObject['height'] = \"200px\";\n          break;\n        case \"xl\":\n          styleObject['height'] = \"150px\";\n          break;\n        case \"lg\":\n          styleObject['height'] = \"135px\";\n          break;\n        case \"md\":\n          styleObject['height'] = \"40px\";\n          break;\n        case \"sm\":\n          styleObject['height'] = \"37px\";\n          break;\n        default:\n          styleObject['height'] = \"20px\";\n      }\n    }\n    return styleObject;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: customMargin && customMargin == true ? 'merge-content-delete' : 'inputBoxContainer',\n    children: [renderLabel(), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _handleText,\n      onClick: onClick ? _handleGuidingText : () => {\n        return false;\n      },\n      onBlur: onBlur ? _hideGuidingText : () => {\n        return false;\n      },\n      style: {\n        ...boxStyle()\n      },\n      className: `topicAreaStyle form-control ${smallBoxEnabled ? \"smallBox\" : \"\"}`,\n      value: value,\n      type: \"text\",\n      placeholder: placeholderText ? placeholderText : 'Type or paste your inputs here',\n      rows: smallBoxEnabled ? \"1\" : \"2\",\n      cols: columnNumber()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), renderCharCount(), renderNote(), renderInfoToolTip()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomInputBox;\nexport default CustomInputBox;\nvar _c;\n$RefreshReg$(_c, \"CustomInputBox\");","map":{"version":3,"names":["React","useState","Info","ReactTooltip","Spinner","jsxDEV","_jsxDEV","CustomInputBox","value","onChange","onBlur","onClick","mandatory","label","labelButton","labelButtonSpinner","onLabelBtnClick","charCount","maxLength","inputType","placeholderText","size","note","error","noOfColumns","smallBoxEnabled","info","customMargin","_handleText","e","target","_handleGuidingText","_hideGuidingText","renderLabel","infoContainer","labelContainer","labelButtonContainer","className","style","marginLeft","color","fileName","_jsxFileName","lineNumber","columnNumber","cursor","children","renderInfoToolTip","id","backgroundColor","place","offset","left","effect","html","renderNote","fontWeight","renderCharCount","length","smallBox","height","boxStyle","styleObject","type","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/component/CustomInputBox/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Info } from 'react-feather'\nimport ReactTooltip from \"react-tooltip\";\nimport { Spinner } from 'reactstrap'\nimport \"./index.scss\"\n\nconst CustomInputBox = ({\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    mandatory,\n    label,\n    labelButton,\n    labelButtonSpinner,\n    onLabelBtnClick,\n    charCount,\n    maxLength,\n    inputType,\n    placeholderText,\n    size,\n    note,\n    error,\n    noOfColumns,\n    smallBoxEnabled,\n    info,\n    customMargin\n}) => {\n    const _handleText = (e) => { onChange(e.target.value) }\n\n    const _handleGuidingText = (e) => { \n        onClick(e.target.value)\n    }\n\n    const _hideGuidingText = (e) => { \n        onBlur('')\n    }\n\n\n\n\n\n    const renderLabel = () => {\n        let infoContainer = \"\"\n        let labelContainer = \"\"\n        let labelButtonContainer = \"\"\n        if(info){\n            infoContainer = <Info\n                                data-tip data-for={label}\n                                className=\"actionIcon\" \n                                style={{marginLeft:'7px'}}\n                                size={\"19px\"} \n                                color='#546E7A'/>\n        }\n        if(labelButton){\n            labelButtonContainer = <span onClick={onLabelBtnClick?onLabelBtnClick:{}} style={{cursor: 'pointer'}} className=\"suggestionLabelBlockButton\">\n                                            {labelButton}\n                                    </span>\n        }\n\n        if(labelButtonSpinner){\n            labelButtonContainer = <Spinner size={'12px'} color=\"grey\" />\n        }\n\n        if(label){\n            labelContainer = <label className=\"labelTextArea\">\n                                    {label}{mandatory?\" *\":\"\"}\n                                    {/*infoContainer*/}\n                                    {labelButtonContainer}\n                            </label>\n        }\n        return labelContainer\n    }\n\n    const renderInfoToolTip = () => {\n        if(info){\n            return (\n                <ReactTooltip \n                    id={label}\n                    backgroundColor=\"#1761fd\"\n                    place=\"top\" \n                    offset ={{left: '0%'}}\n                    effect=\"solid\"\n                    html={true}>\n                    {info}\n                </ReactTooltip>\n            )\n        }\n    }\n\n    const renderNote = () => {\n        if(note){\n            return (\n                <div className=\"tipNoteStyle\">\n                    <span style={{color: \"#000000\", fontWeight:\"bold\"}}>Hint</span>: {note}\n                </div>\n            )\n        }\n    }\n\n    const renderCharCount = () => {\n        if(charCount){\n            return (\n                <div className=\"tipNoteStyle\">\n                    <span style={{color: \"#000000\", fontWeight:\"bold\"}}>Character count: </span> \n                    {value.length} {maxLength?\" / \" + maxLength:\"\"}\n                </div>\n            )\n        }\n    }\n\n    const smallBox = {\n        height: '20px'\n    }\n\n    const columnNumber = () => {\n        if(noOfColumns){ return noOfColumns }\n        else if(smallBoxEnabled) { return \"10\" }\n        else { return \"30\"}\n    }\n\n    const boxStyle = () => {\n        const styleObject = {}\n        if(size){\n            switch(size){\n                case \"xxl\": styleObject['height'] = \"320px\"; break;\n                case \"xll\": styleObject['height'] = \"200px\"; break;\n                case \"xl\": styleObject['height'] = \"150px\"; break;\n                case \"lg\": styleObject['height'] = \"135px\"; break;\n                case \"md\": styleObject['height'] = \"40px\"; break;\n                case \"sm\": styleObject['height'] = \"37px\"; break;\n                default: styleObject['height'] = \"20px\";\n            }\n        }\n        return styleObject\n    }\n\n    return(\n        <div className={customMargin && customMargin == true ? 'merge-content-delete': 'inputBoxContainer'}>\n            {renderLabel()}\n            <input\n                onChange={_handleText}\n                onClick={onClick ? _handleGuidingText: ()=> {return false}}\n                onBlur={onBlur ? _hideGuidingText : ()=> {return false}}\n                style={{...boxStyle()}}\n                className={`topicAreaStyle form-control ${smallBoxEnabled?\"smallBox\":\"\"}`}\n                value={value}\n                type=\"text\"\n                placeholder={placeholderText?placeholderText:'Type or paste your inputs here'}\n                rows={smallBoxEnabled?\"1\":\"2\"}\n                cols={columnNumber()}\n                />\n            {renderCharCount()}\n            {renderNote()}\n            {renderInfoToolTip()}\n        </div>\n      )\n}\n\nexport default CustomInputBox"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}