{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\utility\\\\auth\\\\Routes.js\";\nimport { Outlet, Navigate } from 'react-router-dom';\nimport Login from \"../../views/Login/index.js\";\nimport Register from \"../../views/Register\";\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\";\nimport { isAdmin, scrollOnTop } from '../helper';\nimport { verifyToken } from '../../services/agent.js';\nimport { faL } from '@fortawesome/free-solid-svg-icons';\nimport LocalStorageService from '../../services/localstorage.service.js';\nimport toast from 'react-hot-toast';\nimport { toastStyle } from \"../../utility/helper\";\nimport { statusCode } from \"../../utility/constants/utilObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localStorageService = LocalStorageService.getService();\nconst checkAuth = () => {\n  if (localStorageService.getAccessToken() && checkTokenLife()) {\n    return true;\n  } else {\n    localStorageService.clearLocalStorage();\n    return false;\n  }\n};\nconst checkAuthAdmin = () => {\n  if (localStorageService.getAccessToken() && localStorageService.isAdminUser() && checkTokenLife()) {\n    return true;\n  } else {\n    localStorageService.clearLocalStorage();\n    return false;\n  }\n};\n// PrivateRoutes can ONLY be accessed if user is logged in for e.g. Dashboard, Profile etc. routes\nconst PrivateRoutes = ({\n  component: Component,\n  role\n}) => {\n  scrollOnTop();\n  if (role == \"admin\") {\n    const data = checkAuthAdmin();\n    return checkAuthAdmin() ? /*#__PURE__*/_jsxDEV(LayoutWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 84\n    }, this);\n  } else {\n    return checkAuth() ? /*#__PURE__*/_jsxDEV(LayoutWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 79\n    }, this);\n  }\n};\n// PublicRoutes can ONLY be accessed if user is not logged in for e.g. Login, Register, Forget Password etc. routes \n_c = PrivateRoutes;\nconst PublicRoutes = ({\n  component: Component,\n  notAllowedInAdmin\n}) => {\n  if (notAllowedInAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }, this);\n  } else {\n    return checkAuth() ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 52\n    }, this);\n  }\n};\n// AllRoutes can be accessed anytime, wheather a user is logged in or not he can navigate to this route for e.g. Pricing route \n_c2 = PublicRoutes;\nconst AllRoutes = ({\n  component: Component\n}) => {\n  return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n_c3 = AllRoutes;\nconst checkTokenLife = () => {\n  if (localStorage.getItem('logged') != undefined && localStorage.getItem('logged') != \"\") {\n    const loggedTime = localStorage.getItem('logged');\n    const currentTime = Date.now();\n    const hours = (Math.abs(currentTime - loggedTime) / 36e5).toFixed(0);\n    if (hours >= 8) {\n      localStorageService.clearLocalStorage();\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    localStorageService.clearLocalStorage();\n    return false;\n  }\n};\nexport { PrivateRoutes, PublicRoutes, AllRoutes, checkAuthAdmin };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PrivateRoutes\");\n$RefreshReg$(_c2, \"PublicRoutes\");\n$RefreshReg$(_c3, \"AllRoutes\");","map":{"version":3,"names":["Outlet","Navigate","Login","Register","LayoutWrapper","isAdmin","scrollOnTop","verifyToken","faL","LocalStorageService","toast","toastStyle","statusCode","jsxDEV","_jsxDEV","localStorageService","getService","checkAuth","getAccessToken","checkTokenLife","clearLocalStorage","checkAuthAdmin","isAdminUser","PrivateRoutes","component","Component","role","data","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","PublicRoutes","notAllowedInAdmin","_c2","AllRoutes","_c3","localStorage","getItem","undefined","loggedTime","currentTime","Date","now","hours","Math","abs","toFixed","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/utility/auth/Routes.js"],"sourcesContent":["import { Outlet, Navigate } from 'react-router-dom'\nimport Login from \"../../views/Login/index.js\"\nimport Register from \"../../views/Register\"\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\"\nimport { isAdmin, scrollOnTop } from '../helper'\nimport { verifyToken } from '../../services/agent.js'\nimport { faL } from '@fortawesome/free-solid-svg-icons'\nimport LocalStorageService from '../../services/localstorage.service.js'\nimport toast from 'react-hot-toast'\nimport { toastStyle } from \"../../utility/helper\"\nimport { statusCode } from \"../../utility/constants/utilObject\";\nconst localStorageService = LocalStorageService.getService();\n\nconst checkAuth = () => {\n    if(localStorageService.getAccessToken() && checkTokenLife()){\n        return true;\n    }else{\n        localStorageService.clearLocalStorage();\n        return false\n    }\n}\nconst checkAuthAdmin = () =>{\n    if(localStorageService.getAccessToken() &&  localStorageService.isAdminUser() && checkTokenLife()){\n        return true;\n    }else{\n        localStorageService.clearLocalStorage();\n        return false\n    }\n}\n// PrivateRoutes can ONLY be accessed if user is logged in for e.g. Dashboard, Profile etc. routes\nconst PrivateRoutes = ({component : Component,role}) => { \n    scrollOnTop()\n    if(role == \"admin\"){\n        const data = checkAuthAdmin();\n        return( (checkAuthAdmin()) ? <LayoutWrapper><Component/></LayoutWrapper> : <Navigate to=\"/login\"/>)\n    }else{\n        return( (checkAuth()) ? <LayoutWrapper><Component/></LayoutWrapper> : <Navigate to=\"/login\"/>)\n    }\n}\n// PublicRoutes can ONLY be accessed if user is not logged in for e.g. Login, Register, Forget Password etc. routes \nconst PublicRoutes= ({component : Component, notAllowedInAdmin}) => {\n    if(notAllowedInAdmin){return(<Navigate to=\"/\"/>)}\n    else{return( checkAuth() ? <Navigate to=\"/\"/>: <Component/>)}\n}\n// AllRoutes can be accessed anytime, wheather a user is logged in or not he can navigate to this route for e.g. Pricing route \nconst AllRoutes=({component : Component})=>{\n    return <Component/>\n}\n\nconst checkTokenLife = () => {\n    if(localStorage.getItem('logged') != undefined && localStorage.getItem('logged') != \"\"){\n        const loggedTime = localStorage.getItem('logged');\n        const currentTime = Date.now();\n        const hours = (Math.abs(currentTime - loggedTime) / 36e5).toFixed(0);\n        if(hours >= 8){\n            localStorageService.clearLocalStorage();\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        localStorageService.clearLocalStorage();\n        return false;\n    }\n}\n\nexport  {\n    PrivateRoutes,\n    PublicRoutes,\n    AllRoutes,\n    checkAuthAdmin\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}