{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\component\\\\CustomInputBox\\\\index.js\";\nimport React from \"react\";\nimport { Info } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Spinner } from \"reactstrap\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInputBox = ({\n  value,\n  onChange,\n  onBlur,\n  onClick,\n  mandatory,\n  label,\n  labelButton,\n  labelButtonSpinner,\n  onLabelBtnClick,\n  charCount,\n  maxLength,\n  inputType,\n  // Use this prop for the input type\n  placeholderText,\n  size,\n  note,\n  error,\n  noOfColumns,\n  smallBoxEnabled,\n  info,\n  customMargin\n}) => {\n  const _handleText = e => {\n    onChange(e.target.value);\n  };\n  const _handleGuidingText = e => {\n    onClick(e.target.value);\n  };\n  const _hideGuidingText = e => {\n    onBlur(\"\");\n  };\n  const renderLabel = () => {\n    let infoContainer = \"\";\n    let labelContainer = \"\";\n    let labelButtonContainer = \"\";\n    if (info) {\n      infoContainer = /*#__PURE__*/_jsxDEV(Info, {\n        \"data-tip\": true,\n        \"data-for\": label,\n        className: \"actionIcon\",\n        style: {\n          marginLeft: \"7px\"\n        },\n        size: \"19px\",\n        color: \"#546E7A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n    if (labelButton) {\n      labelButtonContainer = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onLabelBtnClick ? onLabelBtnClick : {},\n        style: {\n          cursor: \"pointer\"\n        },\n        className: \"suggestionLabelBlockButton\",\n        children: labelButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n    if (labelButtonSpinner) {\n      labelButtonContainer = /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"12px\",\n        color: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 30\n      }, this);\n    }\n    if (label) {\n      labelContainer = /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelTextArea\",\n        children: [label, mandatory ? \" *\" : \"\", labelButtonContainer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    }\n    return labelContainer;\n  };\n  const renderInfoToolTip = () => {\n    if (info) {\n      return /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: label,\n        backgroundColor: \"#1761fd\",\n        place: \"top\",\n        offset: {\n          left: \"0%\"\n        },\n        effect: \"solid\",\n        html: true,\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderNote = () => {\n    if (note) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipNoteStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"bold\"\n          },\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \":\", \" \", note]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderCharCount = () => {\n    if (charCount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipNoteStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"bold\"\n          },\n          children: [\"Character count:\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), value.length, \" \", maxLength ? \" / \" + maxLength : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const smallBox = {\n    height: \"20px\"\n  };\n  const columnNumber = () => {\n    if (noOfColumns) {\n      return noOfColumns;\n    } else if (smallBoxEnabled) {\n      return \"10\";\n    } else {\n      return \"30\";\n    }\n  };\n  const boxStyle = () => {\n    const styleObject = {};\n    if (size) {\n      switch (size) {\n        case \"xxl\":\n          styleObject[\"height\"] = \"320px\";\n          break;\n        case \"xll\":\n          styleObject[\"height\"] = \"200px\";\n          break;\n        case \"xl\":\n          styleObject[\"height\"] = \"150px\";\n          break;\n        case \"lg\":\n          styleObject[\"height\"] = \"135px\";\n          break;\n        case \"md\":\n          styleObject[\"height\"] = \"40px\";\n          break;\n        case \"sm\":\n          styleObject[\"height\"] = \"37px\";\n          break;\n        default:\n          styleObject[\"height\"] = \"20px\";\n      }\n    }\n    return styleObject;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: customMargin && customMargin === true ? \"merge-content-delete\" : \"inputBoxContainer\",\n    children: [renderLabel(), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _handleText,\n      onClick: onClick ? _handleGuidingText : () => {\n        return false;\n      },\n      onBlur: onBlur ? _hideGuidingText : () => {\n        return false;\n      },\n      style: {\n        ...boxStyle()\n      },\n      className: `topicAreaStyle form-control ${smallBoxEnabled ? \"smallBox\" : \"\"}`,\n      value: value,\n      type: inputType || \"text\" // Use the inputType prop here\n      ,\n      placeholder: placeholderText ? placeholderText : \"Type or paste your inputs here\",\n      rows: smallBoxEnabled ? \"1\" : \"2\",\n      cols: columnNumber()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), renderCharCount(), renderNote(), renderInfoToolTip()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomInputBox;\nexport default CustomInputBox;\nvar _c;\n$RefreshReg$(_c, \"CustomInputBox\");","map":{"version":3,"names":["React","Info","ReactTooltip","Spinner","jsxDEV","_jsxDEV","CustomInputBox","value","onChange","onBlur","onClick","mandatory","label","labelButton","labelButtonSpinner","onLabelBtnClick","charCount","maxLength","inputType","placeholderText","size","note","error","noOfColumns","smallBoxEnabled","info","customMargin","_handleText","e","target","_handleGuidingText","_hideGuidingText","renderLabel","infoContainer","labelContainer","labelButtonContainer","className","style","marginLeft","color","fileName","_jsxFileName","lineNumber","columnNumber","cursor","children","renderInfoToolTip","id","backgroundColor","place","offset","left","effect","html","renderNote","fontWeight","renderCharCount","length","smallBox","height","boxStyle","styleObject","type","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/component/CustomInputBox/index.js"],"sourcesContent":["import React from \"react\";\nimport { Info } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Spinner } from \"reactstrap\";\nimport \"./index.scss\";\n\nconst CustomInputBox = ({\n  value,\n  onChange,\n  onBlur,\n  onClick,\n  mandatory,\n  label,\n  labelButton,\n  labelButtonSpinner,\n  onLabelBtnClick,\n  charCount,\n  maxLength,\n  inputType, // Use this prop for the input type\n  placeholderText,\n  size,\n  note,\n  error,\n  noOfColumns,\n  smallBoxEnabled,\n  info,\n  customMargin,\n}) => {\n  const _handleText = (e) => {\n    onChange(e.target.value);\n  };\n\n  const _handleGuidingText = (e) => {\n    onClick(e.target.value);\n  };\n\n  const _hideGuidingText = (e) => {\n    onBlur(\"\");\n  };\n\n  const renderLabel = () => {\n    let infoContainer = \"\";\n    let labelContainer = \"\";\n    let labelButtonContainer = \"\";\n    if (info) {\n      infoContainer = (\n        <Info\n          data-tip\n          data-for={label}\n          className=\"actionIcon\"\n          style={{ marginLeft: \"7px\" }}\n          size={\"19px\"}\n          color=\"#546E7A\"\n        />\n      );\n    }\n    if (labelButton) {\n      labelButtonContainer = (\n        <span\n          onClick={onLabelBtnClick ? onLabelBtnClick : {}}\n          style={{ cursor: \"pointer\" }}\n          className=\"suggestionLabelBlockButton\"\n        >\n          {labelButton}\n        </span>\n      );\n    }\n\n    if (labelButtonSpinner) {\n      labelButtonContainer = <Spinner size={\"12px\"} color=\"grey\" />;\n    }\n\n    if (label) {\n      labelContainer = (\n        <label className=\"labelTextArea\">\n          {label}\n          {mandatory ? \" *\" : \"\"}\n          {labelButtonContainer}\n        </label>\n      );\n    }\n    return labelContainer;\n  };\n\n  const renderInfoToolTip = () => {\n    if (info) {\n      return (\n        <ReactTooltip\n          id={label}\n          backgroundColor=\"#1761fd\"\n          place=\"top\"\n          offset={{ left: \"0%\" }}\n          effect=\"solid\"\n          html={true}\n        >\n          {info}\n        </ReactTooltip>\n      );\n    }\n  };\n\n  const renderNote = () => {\n    if (note) {\n      return (\n        <div className=\"tipNoteStyle\">\n          <span style={{ color: \"#000000\", fontWeight: \"bold\" }}>Hint</span>:{\" \"}\n          {note}\n        </div>\n      );\n    }\n  };\n\n  const renderCharCount = () => {\n    if (charCount) {\n      return (\n        <div className=\"tipNoteStyle\">\n          <span style={{ color: \"#000000\", fontWeight: \"bold\" }}>\n            Character count:{\" \"}\n          </span>\n          {value.length} {maxLength ? \" / \" + maxLength : \"\"}\n        </div>\n      );\n    }\n  };\n\n  const smallBox = {\n    height: \"20px\",\n  };\n\n  const columnNumber = () => {\n    if (noOfColumns) {\n      return noOfColumns;\n    } else if (smallBoxEnabled) {\n      return \"10\";\n    } else {\n      return \"30\";\n    }\n  };\n\n  const boxStyle = () => {\n    const styleObject = {};\n    if (size) {\n      switch (size) {\n        case \"xxl\":\n          styleObject[\"height\"] = \"320px\";\n          break;\n        case \"xll\":\n          styleObject[\"height\"] = \"200px\";\n          break;\n        case \"xl\":\n          styleObject[\"height\"] = \"150px\";\n          break;\n        case \"lg\":\n          styleObject[\"height\"] = \"135px\";\n          break;\n        case \"md\":\n          styleObject[\"height\"] = \"40px\";\n          break;\n        case \"sm\":\n          styleObject[\"height\"] = \"37px\";\n          break;\n        default:\n          styleObject[\"height\"] = \"20px\";\n      }\n    }\n    return styleObject;\n  };\n\n  return (\n    <div\n      className={\n        customMargin && customMargin === true\n          ? \"merge-content-delete\"\n          : \"inputBoxContainer\"\n      }\n    >\n      {renderLabel()}\n      <input\n        onChange={_handleText}\n        onClick={\n          onClick\n            ? _handleGuidingText\n            : () => {\n                return false;\n              }\n        }\n        onBlur={\n          onBlur\n            ? _hideGuidingText\n            : () => {\n                return false;\n              }\n        }\n        style={{ ...boxStyle() }}\n        className={`topicAreaStyle form-control ${\n          smallBoxEnabled ? \"smallBox\" : \"\"\n        }`}\n        value={value}\n        type={inputType || \"text\"} // Use the inputType prop here\n        placeholder={\n          placeholderText ? placeholderText : \"Type or paste your inputs here\"\n        }\n        rows={smallBoxEnabled ? \"1\" : \"2\"}\n        cols={columnNumber()}\n      />\n      {renderCharCount()}\n      {renderNote()}\n      {renderInfoToolTip()}\n    </div>\n  );\n};\n\nexport default CustomInputBox;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,GAAGA,CAAC;EACtBC,KAAK;EACLC,QAAQ;EACRC,MAAM;EACNC,OAAO;EACPC,SAAS;EACTC,KAAK;EACLC,WAAW;EACXC,kBAAkB;EAClBC,eAAe;EACfC,SAAS;EACTC,SAAS;EACTC,SAAS;EAAE;EACXC,eAAe;EACfC,IAAI;EACJC,IAAI;EACJC,KAAK;EACLC,WAAW;EACXC,eAAe;EACfC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMuB,kBAAkB,GAAIF,CAAC,IAAK;IAChClB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;EACzB,CAAC;EAED,MAAMwB,gBAAgB,GAAIH,CAAC,IAAK;IAC9BnB,MAAM,CAAC,EAAE,CAAC;EACZ,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,cAAc,GAAG,EAAE;IACvB,IAAIC,oBAAoB,GAAG,EAAE;IAC7B,IAAIV,IAAI,EAAE;MACRQ,aAAa,gBACX5B,OAAA,CAACJ,IAAI;QACH,gBAAQ;QACR,YAAUW,KAAM;QAChBwB,SAAS,EAAC,YAAY;QACtBC,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAM,CAAE;QAC7BlB,IAAI,EAAE,MAAO;QACbmB,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACF;IACH;IACA,IAAI9B,WAAW,EAAE;MACfsB,oBAAoB,gBAClB9B,OAAA;QACEK,OAAO,EAAEK,eAAe,GAAGA,eAAe,GAAG,CAAC,CAAE;QAChDsB,KAAK,EAAE;UAAEO,MAAM,EAAE;QAAU,CAAE;QAC7BR,SAAS,EAAC,4BAA4B;QAAAS,QAAA,EAErChC;MAAW;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACP;IACH;IAEA,IAAI7B,kBAAkB,EAAE;MACtBqB,oBAAoB,gBAAG9B,OAAA,CAACF,OAAO;QAACiB,IAAI,EAAE,MAAO;QAACmB,KAAK,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC/D;IAEA,IAAI/B,KAAK,EAAE;MACTsB,cAAc,gBACZ7B,OAAA;QAAO+B,SAAS,EAAC,eAAe;QAAAS,QAAA,GAC7BjC,KAAK,EACLD,SAAS,GAAG,IAAI,GAAG,EAAE,EACrBwB,oBAAoB;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACR;IACH;IACA,OAAOT,cAAc;EACvB,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIrB,IAAI,EAAE;MACR,oBACEpB,OAAA,CAACH,YAAY;QACX6C,EAAE,EAAEnC,KAAM;QACVoC,eAAe,EAAC,SAAS;QACzBC,KAAK,EAAC,KAAK;QACXC,MAAM,EAAE;UAAEC,IAAI,EAAE;QAAK,CAAE;QACvBC,MAAM,EAAC,OAAO;QACdC,IAAI,EAAE,IAAK;QAAAR,QAAA,EAEVpB;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAEnB;EACF,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIjC,IAAI,EAAE;MACR,oBACEhB,OAAA;QAAK+B,SAAS,EAAC,cAAc;QAAAS,QAAA,gBAC3BxC,OAAA;UAAMgC,KAAK,EAAE;YAAEE,KAAK,EAAE,SAAS;YAAEgB,UAAU,EAAE;UAAO,CAAE;UAAAV,QAAA,EAAC;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,EAAC,GAAG,EACtEtB,IAAI;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAEV;EACF,CAAC;EAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIxC,SAAS,EAAE;MACb,oBACEX,OAAA;QAAK+B,SAAS,EAAC,cAAc;QAAAS,QAAA,gBAC3BxC,OAAA;UAAMgC,KAAK,EAAE;YAAEE,KAAK,EAAE,SAAS;YAAEgB,UAAU,EAAE;UAAO,CAAE;UAAAV,QAAA,GAAC,kBACrC,EAAC,GAAG;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACNpC,KAAK,CAACkD,MAAM,EAAC,GAAC,EAACxC,SAAS,GAAG,KAAK,GAAGA,SAAS,GAAG,EAAE;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAEV;EACF,CAAC;EAED,MAAMe,QAAQ,GAAG;IACfC,MAAM,EAAE;EACV,CAAC;EAED,MAAMhB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIpB,WAAW,EAAE;MACf,OAAOA,WAAW;IACpB,CAAC,MAAM,IAAIC,eAAe,EAAE;MAC1B,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMoC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,WAAW,GAAG,CAAC,CAAC;IACtB,IAAIzC,IAAI,EAAE;MACR,QAAQA,IAAI;QACV,KAAK,KAAK;UACRyC,WAAW,CAAC,QAAQ,CAAC,GAAG,OAAO;UAC/B;QACF,KAAK,KAAK;UACRA,WAAW,CAAC,QAAQ,CAAC,GAAG,OAAO;UAC/B;QACF,KAAK,IAAI;UACPA,WAAW,CAAC,QAAQ,CAAC,GAAG,OAAO;UAC/B;QACF,KAAK,IAAI;UACPA,WAAW,CAAC,QAAQ,CAAC,GAAG,OAAO;UAC/B;QACF,KAAK,IAAI;UACPA,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM;UAC9B;QACF,KAAK,IAAI;UACPA,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM;UAC9B;QACF;UACEA,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM;MAClC;IACF;IACA,OAAOA,WAAW;EACpB,CAAC;EAED,oBACExD,OAAA;IACE+B,SAAS,EACPV,YAAY,IAAIA,YAAY,KAAK,IAAI,GACjC,sBAAsB,GACtB,mBACL;IAAAmB,QAAA,GAEAb,WAAW,CAAC,CAAC,eACd3B,OAAA;MACEG,QAAQ,EAAEmB,WAAY;MACtBjB,OAAO,EACLA,OAAO,GACHoB,kBAAkB,GAClB,MAAM;QACJ,OAAO,KAAK;MACd,CACL;MACDrB,MAAM,EACJA,MAAM,GACFsB,gBAAgB,GAChB,MAAM;QACJ,OAAO,KAAK;MACd,CACL;MACDM,KAAK,EAAE;QAAE,GAAGuB,QAAQ,CAAC;MAAE,CAAE;MACzBxB,SAAS,EAAG,+BACVZ,eAAe,GAAG,UAAU,GAAG,EAChC,EAAE;MACHjB,KAAK,EAAEA,KAAM;MACbuD,IAAI,EAAE5C,SAAS,IAAI,MAAO,CAAC;MAAA;MAC3B6C,WAAW,EACT5C,eAAe,GAAGA,eAAe,GAAG,gCACrC;MACD6C,IAAI,EAAExC,eAAe,GAAG,GAAG,GAAG,GAAI;MAClCyC,IAAI,EAAEtB,YAAY,CAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACDa,eAAe,CAAC,CAAC,EACjBF,UAAU,CAAC,CAAC,EACZR,iBAAiB,CAAC,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACuB,EAAA,GA5MI5D,cAAc;AA8MpB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}