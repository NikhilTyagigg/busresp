{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\@core\\\\components\\\\input-password-toggle\\\\index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState, forwardRef } from \"react\";\n\n// ** Third Party Components\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Eye, EyeOff } from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPasswordToggle = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    name,\n    value,\n    onChange,\n    ...rest\n  } = props;\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible);\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14;\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : /*#__PURE__*/_jsxDEV(Eye, {\n        size: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }, this);\n    } else {\n      return showIcon ? showIcon : /*#__PURE__*/_jsxDEV(EyeOff, {\n        size: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 36\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [label ? /*#__PURE__*/_jsxDEV(Label, {\n      className: \"form-label\",\n      for: htmlFor,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: classnames({\n        [className]: className,\n        \"is-invalid\": invalid\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: ref,\n        invalid: invalid,\n        type: inputVisibility === false ? \"password\" : \"text\",\n        placeholder: placeholder ? placeholder : \"············\",\n        className: classnames({\n          [inputClassName]: inputClassName\n        }),\n        name: name,\n        value: value,\n        onChange: onChange\n\n        /*eslint-disable */,\n        ...(label && htmlFor ? {\n          id: htmlFor\n        } : {}),\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n        className: \"cursor-pointer\",\n        onClick: () => setInputVisibility(!inputVisibility),\n        children: renderIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"CP4M4NpEdDJ4VcmvhtakRhTfULA=\"));\n_c2 = InputPasswordToggle;\nexport default InputPasswordToggle;\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\n      throw new Error(\"htmlFor prop is required when label prop is present\");\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props[\"label\"] === \"undefined\") {\n      throw new Error(\"label prop is required when htmlFor prop is present\");\n    }\n  }\n};\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"InputPasswordToggle$forwardRef\");\n$RefreshReg$(_c2, \"InputPasswordToggle\");","map":{"version":3,"names":["Fragment","useState","forwardRef","PropTypes","classnames","Eye","EyeOff","InputGroup","Input","InputGroupText","Label","jsxDEV","_jsxDEV","InputPasswordToggle","_c","_s","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","name","value","onChange","rest","inputVisibility","setInputVisibility","renderIcon","size","fileName","_jsxFileName","lineNumber","columnNumber","children","for","type","id","onClick","_c2","propTypes","bool","node","string","number","propName","Error","defaultProps","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/@core/components/input-password-toggle/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from \"react\"\n\n// ** Third Party Components\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport { Eye, EyeOff } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\"\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    name,\n    value,\n    onChange,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className=\"form-label\" for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          \"is-invalid\": invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? \"password\" : \"text\"}\n          placeholder={placeholder ? placeholder : \"············\"}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          name={name}\n          value={value}\n          onChange={onChange}\n\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor,\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText\n          className=\"cursor-pointer\"\n          onClick={() => setInputVisibility(!inputVisibility)}\n        >\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\n      throw new Error(\"htmlFor prop is required when label prop is present\")\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props[\"label\"] === \"undefined\") {\n      throw new Error(\"label prop is required when htmlFor prop is present\")\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}