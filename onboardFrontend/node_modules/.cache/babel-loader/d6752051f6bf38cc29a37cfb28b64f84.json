{"ast":null,"code":"const LocalStorageService = function () {\n  var _service;\n  function _getService() {\n    if (!_service) {\n      _service = this;\n      return _service;\n    }\n    return _service;\n  }\n  function _setToken(tokenObj) {\n    localStorage.setItem('token', tokenObj.token);\n    localStorage.setItem('refresh_token', tokenObj.refresh);\n  }\n  function _setTokenAfterRefreshToken(token) {\n    localStorage.setItem('token', token);\n  }\n  function _setUserInfo(user) {\n    localStorage.setItem('userInfo', JSON.stringify(user));\n  }\n  function _getUserInfo() {\n    localStorage.getItem('userInfo');\n    if (localStorage.getItem('userInfo')) {\n      return JSON.parse(localStorage.getItem('userInfo'));\n    }\n    return null;\n  }\n  function _getAccessToken() {\n    return localStorage.getItem('token');\n  }\n  function _getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n  function _isAdminUser() {\n    return localStorage.getItem('user_role') == 'ADMIN';\n  }\n  function _clearToken() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n  }\n  function _clearLocalStorage() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('userInfo');\n\n    //localStorage.clear();\n  }\n  return {\n    getService: _getService,\n    setToken: _setToken,\n    setUserInfo: _setUserInfo,\n    getUserInfo: _getUserInfo,\n    getAccessToken: _getAccessToken,\n    getRefreshToken: _getRefreshToken,\n    clearToken: _clearToken,\n    clearLocalStorage: _clearLocalStorage,\n    isAdminUser: _isAdminUser,\n    setTokenAfterRefreshToken: _setTokenAfterRefreshToken\n  };\n}();\nexport default LocalStorageService;","map":{"version":3,"names":["LocalStorageService","_service","_getService","_setToken","tokenObj","localStorage","setItem","token","refresh","_setTokenAfterRefreshToken","_setUserInfo","user","JSON","stringify","_getUserInfo","getItem","parse","_getAccessToken","_getRefreshToken","_isAdminUser","_clearToken","removeItem","_clearLocalStorage","getService","setToken","setUserInfo","getUserInfo","getAccessToken","getRefreshToken","clearToken","clearLocalStorage","isAdminUser","setTokenAfterRefreshToken"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/services/localstorage.service.js"],"sourcesContent":["const LocalStorageService = (function(){\r\n    var _service;\r\n    function _getService() {\r\n        if(!_service) {\r\n          _service = this;\r\n          return _service\r\n      }\r\n      return _service\r\n    }\r\n    function _setToken(tokenObj) {\r\n      localStorage.setItem('token', tokenObj.token);\r\n      localStorage.setItem('refresh_token', tokenObj.refresh);\r\n    }\r\n\r\n    function _setTokenAfterRefreshToken(token) {\r\n      localStorage.setItem('token', token);\r\n    }\r\n\r\n    function _setUserInfo(user) {\r\n      localStorage.setItem('userInfo', JSON.stringify(user));\r\n    }\r\n\r\n    function _getUserInfo() {\r\n      localStorage.getItem('userInfo');\r\n      if(localStorage.getItem('userInfo')){\r\n        return JSON.parse(localStorage.getItem('userInfo'))\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function _getAccessToken() {\r\n      return localStorage.getItem('token');\r\n    }\r\n    function _getRefreshToken() {\r\n      return localStorage.getItem('refresh_token');\r\n    }\r\n    function _isAdminUser() {\r\n      return localStorage.getItem('user_role') == 'ADMIN';\r\n    }\r\n    function _clearToken() {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refresh_token');\r\n    }\r\n    \r\n    function _clearLocalStorage(){\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refresh_token');\r\n      localStorage.removeItem('userInfo');\r\n\r\n      //localStorage.clear();\r\n    }\r\n\r\n   return {\r\n      getService      : _getService,\r\n      setToken        : _setToken,\r\n      setUserInfo     : _setUserInfo,\r\n      getUserInfo     : _getUserInfo,\r\n      getAccessToken  : _getAccessToken,\r\n      getRefreshToken : _getRefreshToken,\r\n      clearToken      : _clearToken,\r\n      clearLocalStorage : _clearLocalStorage,\r\n      isAdminUser     : _isAdminUser,\r\n      setTokenAfterRefreshToken : _setTokenAfterRefreshToken\r\n    }\r\n  })();\r\n\r\nexport default LocalStorageService;"],"mappings":"AAAA,MAAMA,mBAAmB,GAAI,YAAU;EACnC,IAAIC,QAAQ;EACZ,SAASC,WAAWA,CAAA,EAAG;IACnB,IAAG,CAACD,QAAQ,EAAE;MACZA,QAAQ,GAAG,IAAI;MACf,OAAOA,QAAQ;IACnB;IACA,OAAOA,QAAQ;EACjB;EACA,SAASE,SAASA,CAACC,QAAQ,EAAE;IAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,KAAK,CAAC;IAC7CF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,QAAQ,CAACI,OAAO,CAAC;EACzD;EAEA,SAASC,0BAA0BA,CAACF,KAAK,EAAE;IACzCF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,KAAK,CAAC;EACtC;EAEA,SAASG,YAAYA,CAACC,IAAI,EAAE;IAC1BN,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEM,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;EACxD;EAEA,SAASG,YAAYA,CAAA,EAAG;IACtBT,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC;IAChC,IAAGV,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC,EAAC;MAClC,OAAOH,IAAI,CAACI,KAAK,CAACX,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC,CAAC;IACrD;IACA,OAAO,IAAI;EACb;EAEA,SAASE,eAAeA,CAAA,EAAG;IACzB,OAAOZ,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;EACtC;EACA,SAASG,gBAAgBA,CAAA,EAAG;IAC1B,OAAOb,YAAY,CAACU,OAAO,CAAC,eAAe,CAAC;EAC9C;EACA,SAASI,YAAYA,CAAA,EAAG;IACtB,OAAOd,YAAY,CAACU,OAAO,CAAC,WAAW,CAAC,IAAI,OAAO;EACrD;EACA,SAASK,WAAWA,CAAA,EAAG;IACrBf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChChB,YAAY,CAACgB,UAAU,CAAC,eAAe,CAAC;EAC1C;EAEA,SAASC,kBAAkBA,CAAA,EAAE;IAC3BjB,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChChB,YAAY,CAACgB,UAAU,CAAC,eAAe,CAAC;IACxChB,YAAY,CAACgB,UAAU,CAAC,UAAU,CAAC;;IAEnC;EACF;EAED,OAAO;IACJE,UAAU,EAAQrB,WAAW;IAC7BsB,QAAQ,EAAUrB,SAAS;IAC3BsB,WAAW,EAAOf,YAAY;IAC9BgB,WAAW,EAAOZ,YAAY;IAC9Ba,cAAc,EAAIV,eAAe;IACjCW,eAAe,EAAGV,gBAAgB;IAClCW,UAAU,EAAQT,WAAW;IAC7BU,iBAAiB,EAAGR,kBAAkB;IACtCS,WAAW,EAAOZ,YAAY;IAC9Ba,yBAAyB,EAAGvB;EAC9B,CAAC;AACH,CAAC,CAAE,CAAC;AAEN,eAAeT,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}