{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\component\\\\CustomDropdown\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Info } from 'react-feather';\nimport ReactTooltip from \"react-tooltip\";\nimport Select from \"react-select\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomDropdown = ({\n  value,\n  optionHandler,\n  options,\n  mandatory,\n  label,\n  labelExample,\n  labelButton,\n  onLabelBtnClick,\n  placeholder,\n  customStyle,\n  note,\n  error,\n  info\n}) => {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(value);\n  const renderLabel = () => {\n    let infoContainer = \"\";\n    let labelContainer = \"\";\n    let labelButtonContainer = \"\";\n    let labelExampleContainer = \"\";\n    if (info) {\n      infoContainer = /*#__PURE__*/_jsxDEV(Info, {\n        \"data-tip\": true,\n        \"data-for\": label,\n        className: \"actionIcon\",\n        style: {\n          marginLeft: '7px'\n        },\n        size: \"19px\",\n        color: \"#546E7A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this);\n    }\n    if (labelButton) {\n      labelButtonContainer = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onLabelBtnClick ? onLabelBtnClick : {},\n        className: \"labelBlockButton\",\n        children: \"Suggest keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }, this);\n    }\n    if (labelExample) {\n      labelExampleContainer = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"labelExampleStyle\",\n        children: labelExample\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }, this);\n    }\n    if (label) {\n      labelContainer = /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelTextArea\",\n        children: [label, mandatory ? \" *\" : \"\", labelExampleContainer, infoContainer, labelButtonContainer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this);\n    }\n    return labelContainer;\n  };\n  const renderInfoToolTip = () => {\n    if (info) {\n      return /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: label,\n        place: \"top\",\n        backgroundColor: \"#1761fd\",\n        offset: {\n          left: '0%'\n        },\n        effect: \"solid\",\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const renderNote = () => {\n    if (note) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipNoteStyleDropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), \": \", note]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderLabel(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: customStyle ? customStyle : {},\n      className: \"toneInput\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: selectedOption => {\n          setSelectedValue(selectedOption);\n          optionHandler(selectedOption);\n        },\n        value: selectedValue,\n        options: options,\n        placeholder: placeholder ? placeholder : \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), renderNote(), renderInfoToolTip()]\n  }, void 0, true);\n};\n_s(CustomDropdown, \"F5Seg0zLUpg+lbxIdbIxyAOs1Gs=\");\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","Info","ReactTooltip","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomDropdown","value","optionHandler","options","mandatory","label","labelExample","labelButton","onLabelBtnClick","placeholder","customStyle","note","error","info","_s","selectedValue","setSelectedValue","renderLabel","infoContainer","labelContainer","labelButtonContainer","labelExampleContainer","className","style","marginLeft","size","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","renderInfoToolTip","id","place","backgroundColor","offset","left","effect","renderNote","fontWeight","onChange","selectedOption","_c","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/component/CustomDropdown/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Info } from 'react-feather'\nimport ReactTooltip from \"react-tooltip\";\nimport Select from \"react-select\";\nimport \"./index.scss\"\n\nconst CustomDropdown = ({\n    value,\n    optionHandler,\n    options,\n    mandatory,\n    label,\n    labelExample,\n    labelButton,\n    onLabelBtnClick,\n    placeholder,\n    customStyle,\n    note,\n    error,\n    info\n}) => {\n    const [selectedValue, setSelectedValue] = useState(value);\n\n    const renderLabel = () => {\n        let infoContainer = \"\"\n        let labelContainer = \"\"\n        let labelButtonContainer = \"\"\n        let labelExampleContainer = \"\"\n        if(info){\n            infoContainer = <Info\n                                data-tip data-for={label}\n                                className=\"actionIcon\" \n                                style={{marginLeft:'7px'}}\n                                size={\"19px\"} \n                                color='#546E7A'/>\n        }\n        if(labelButton){\n            labelButtonContainer = <span onClick={onLabelBtnClick?onLabelBtnClick:{}} className=\"labelBlockButton\">\n                                            Suggest keywords\n                                    </span>\n        }\n        if(labelExample){\n            labelExampleContainer = <span className=\"labelExampleStyle\">{labelExample}</span>\n        }\n        if(label){\n            labelContainer = <label className=\"labelTextArea\">\n                                    {label}{mandatory?\" *\":\"\"}\n                                    {labelExampleContainer}\n                                    {infoContainer}\n                                    {labelButtonContainer}\n                            </label>\n        }\n        return labelContainer\n    }\n\n    const renderInfoToolTip = () => {\n        if(info){\n            return (\n                <ReactTooltip \n                    id={label} \n                    place=\"top\"\n                    backgroundColor=\"#1761fd\"\n                    offset ={{left: '0%'}}\n                    effect=\"solid\">\n                    {info}\n                </ReactTooltip>\n            )\n        }\n    }\n\n    const renderNote = () => {\n        if(note){\n            return (\n                <div className=\"tipNoteStyleDropdown\">\n                    <span style={{fontWeight:\"bold\"}}>Hint</span>: {note}\n                </div>\n            )\n        }\n    }\n\n    return(\n        <>\n        {renderLabel()}\n        <div style={customStyle ? customStyle : {}} className=\"toneInput\">\n            <Select\n                onChange={(selectedOption) => {\n                    setSelectedValue(selectedOption);\n                    optionHandler(selectedOption);\n                }}\n                value={selectedValue}\n                options={options}\n                placeholder={placeholder ? placeholder : \"Select...\"}\n            />\n        </div>\n        {renderNote()}\n        {renderInfoToolTip()}\n    </>\n\n      )\n}\n\nexport default CustomDropdown"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}