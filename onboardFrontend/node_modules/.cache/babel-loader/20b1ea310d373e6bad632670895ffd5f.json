{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Desktop\\\\busresp\\\\onboardFrontend\\\\src\\\\index.js\";\n// ** React Imports\nimport { Suspense, lazy } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\n// ** Redux Imports\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n// ** ThemeColors Context\n\nimport { ThemeContext } from \"./utility/context/ThemeColors\";\n\n// ** ThemeConfig\nimport themeConfig from \"./configs/themeConfig\";\n\n// ** Toast\nimport { Toaster } from \"react-hot-toast\";\n// import { ToastContainer } from 'react-toastify'\n\n// ** Spinner (Splash Screen)\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\";\n\n// ** Ripple Button\nimport \"./@core/components/ripple-button\";\n\n// ** PrismJS\nimport \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-jsx.min\";\n\n// ** React Perfect Scrollbar\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\n\n// ** React Hot Toast Styles\nimport \"@styles/react/libs/react-hot-toasts/react-hot-toasts.scss\";\n\n// ** Core styles\nimport \"./@core/assets/fonts/feather/iconfont.css\";\nimport \"./@core/scss/core.scss\";\nimport \"./assets/scss/style.scss\";\n\n// ** Service Worker\nimport * as serviceWorker from \"./serviceWorker\";\n\n// ** Lazy load app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyApp = /*#__PURE__*/lazy(_c = () => import(\"./App\"));\n_c2 = LazyApp;\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ThemeContext, {\n        children: [/*#__PURE__*/_jsxDEV(LazyApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n          position: themeConfig.layout.toastPosition,\n          toastOptions: {\n            className: \"react-hot-toast\",\n            duration: 3000\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nvar _c, _c2;\n$RefreshReg$(_c, \"LazyApp$lazy\");\n$RefreshReg$(_c2, \"LazyApp\");","map":{"version":3,"names":["Suspense","lazy","createRoot","BrowserRouter","HashRouter","store","Provider","ThemeContext","themeConfig","Toaster","Spinner","serviceWorker","jsxDEV","_jsxDEV","LazyApp","_c","_c2","container","document","getElementById","root","render","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","position","layout","toastPosition","toastOptions","className","duration","unregister","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Desktop/busresp/onboardFrontend/src/index.js"],"sourcesContent":["// ** React Imports\nimport { Suspense, lazy } from \"react\"\nimport { createRoot } from \"react-dom/client\"\nimport { BrowserRouter, HashRouter } from \"react-router-dom\"\n\n// ** Redux Imports\nimport { store } from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\n// ** ThemeColors Context\n\nimport { ThemeContext } from \"./utility/context/ThemeColors\"\n\n// ** ThemeConfig\nimport themeConfig from \"./configs/themeConfig\"\n\n// ** Toast\nimport { Toaster } from \"react-hot-toast\"\n// import { ToastContainer } from 'react-toastify'\n\n// ** Spinner (Splash Screen)\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\"\n\n// ** Ripple Button\nimport \"./@core/components/ripple-button\"\n\n// ** PrismJS\nimport \"prismjs\"\nimport \"prismjs/themes/prism-tomorrow.css\"\nimport \"prismjs/components/prism-jsx.min\"\n\n// ** React Perfect Scrollbar\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\n\n// ** React Hot Toast Styles\nimport \"@styles/react/libs/react-hot-toasts/react-hot-toasts.scss\"\n\n// ** Core styles\nimport \"./@core/assets/fonts/feather/iconfont.css\"\nimport \"./@core/scss/core.scss\"\nimport \"./assets/scss/style.scss\"\n\n// ** Service Worker\nimport * as serviceWorker from \"./serviceWorker\"\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import(\"./App\"))\n\nconst container = document.getElementById(\"root\")\nconst root = createRoot(container)\n\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <Suspense fallback={<Spinner />}>\n        <ThemeContext>\n          <LazyApp />\n          <Toaster\n            position={themeConfig.layout.toastPosition}\n            toastOptions={{ className: \"react-hot-toast\", duration: 3000 }}\n          />\n        </ThemeContext>\n      </Suspense>\n    </Provider>\n  </BrowserRouter>\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AACtC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,EAAEC,UAAU,QAAQ,kBAAkB;;AAE5D;AACA,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;;AAEA,SAASC,YAAY,QAAQ,+BAA+B;;AAE5D;AACA,OAAOC,WAAW,MAAM,uBAAuB;;AAE/C;AACA,SAASC,OAAO,QAAQ,iBAAiB;AACzC;;AAEA;AACA,OAAOC,OAAO,MAAM,6CAA6C;;AAEjE;AACA,OAAO,kCAAkC;;AAEzC;AACA,OAAO,SAAS;AAChB,OAAO,mCAAmC;AAC1C,OAAO,kCAAkC;;AAEzC;AACA,OAAO,6CAA6C;;AAEpD;AACA,OAAO,2DAA2D;;AAElE;AACA,OAAO,2CAA2C;AAClD,OAAO,wBAAwB;AAC/B,OAAO,0BAA0B;;AAEjC;AACA,OAAO,KAAKC,aAAa,MAAM,iBAAiB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,gBAAGb,IAAI,CAAAc,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,OAAO,CAAC,CAAC;AAAAC,GAAA,GAArCF,OAAO;AAEb,MAAMG,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,MAAMC,IAAI,GAAGlB,UAAU,CAACe,SAAS,CAAC;AAElCG,IAAI,CAACC,MAAM,eACTR,OAAA,CAACV,aAAa;EAAAmB,QAAA,eACZT,OAAA,CAACP,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAiB,QAAA,eACrBT,OAAA,CAACb,QAAQ;MAACuB,QAAQ,eAAEV,OAAA,CAACH,OAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAL,QAAA,eAC9BT,OAAA,CAACN,YAAY;QAAAe,QAAA,gBACXT,OAAA,CAACC,OAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXd,OAAA,CAACJ,OAAO;UACNmB,QAAQ,EAAEpB,WAAW,CAACqB,MAAM,CAACC,aAAc;UAC3CC,YAAY,EAAE;YAAEC,SAAS,EAAE,iBAAiB;YAAEC,QAAQ,EAAE;UAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACE,CACjB,CAAC;;AAED;AACA;AACA;AACAhB,aAAa,CAACuB,UAAU,CAAC,CAAC;AAAA,IAAAnB,EAAA,EAAAC,GAAA;AAAAmB,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAnB,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}